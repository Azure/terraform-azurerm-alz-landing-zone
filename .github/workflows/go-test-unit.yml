---
name: Unit test

on:
  pull_request_target:
    types: ['opened', 'reopened', 'synchronize']
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read
  id-token: write
  actions: read
  checks: read
  deployments: read

concurrency:
  group: unittest-${{ github.event.pull_request.head.repo.full_name }}/${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  unittest:
    name: Unit test
    runs-on: ${{ matrix.os }}
    environment: CSUTF-RO
    if: |
      (
        github.event.pull_request.head.repo.full_name == 'Azure/terraform-azurerm-alz-landing-zone'
      )
      ||
      (
        github.event.pull_request.head.repo.full_name != 'Azure/terraform-azurerm-alz-landing-zone'
        &&
        contains(github.event.pull_request.labels.*.name, 'PR: Safe to test :test_tube:')
      )
      ||
      (
        github.ref == 'refs/heads/main'
        &&
        github.event_name == 'workflow_dispatch'
      )
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        terraform_version: ['~1.0.0', '~1.2.0']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          persist-credentials: false

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ matrix.terraform_version }}
          terraform_wrapper: false

      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18.x'

      - name: Go test
        run: make test
        env:
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_USE_OIDC: true
