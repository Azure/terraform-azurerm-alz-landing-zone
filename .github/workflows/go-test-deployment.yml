---
name: Deployment test

on:
  pull_request_target:
    types: [opened, reopened, synchronize, labeled]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read
  id-token: write
  actions: read
  checks: read
  deployments: read

jobs:
  deploytest:
    name: Deployment test
    environment: CSUTF
    if: |
      (
        (
          contains(github.event.pull_request.labels.*.name, 'PR: Safe to test :test_tube:')
          &&
          github.event == 'pull_request'
        )
        ||
        (
          github.ref == 'refs/heads/main'
          && github.event == 'workflow_dispatch'
        )
      )
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        terraform_version: ['~1.0.0', '~1.2.0']
    steps:
      - name: Show env
        run: env | sort
        if: ${{ matrix.os }} == 'ubuntu-latest'

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          persist-credentials: false

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ matrix.terraform_version }}
          terraform_wrapper: false

      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18.x'

      - name: Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          allow-no-subscriptions: true

      # This is a terrible hack but this is due to the fact that AZURE_TENANT_ID is required.
      # It allows MSI to be tried. As GitHub actions runners are in Azure, this fails.
      # This only works on Linux based runners
      - name: iptables block MSI endpoint
        run: sudo iptables -I OUTPUT --destination 169.254.169.254 -j REJECT

      - name: Go test
        run: make testdeploy
        env:
          AZURE_BILLING_SCOPE: ${{ secrets.AZURE_BILLING_SCOPE }}
          AZURE_EXISTING_SUBSCRIPTION_ID: ${{ secrets.AZURE_EXISTING_SUBSCRIPTION_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      # This only works on Linux based runners
      - name: Azure logout
        uses: azure/CLI@v1
        if: always()
        with:
          inlineScript: |
            az logout
            az cache purge
            az account clear
